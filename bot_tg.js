const Slimbot = require('slimbot');
const slimbot = new Slimbot(process.env.TOKENTG);
const botconfig = require('./JSON/botconfig.json');
const os = require("os");
const { promptMessage } = require("./functions.js");
const randomPuppy = require("random-puppy");
const math = require('mathjs');
const strftime = require('strftime');
const figlet = require('figlet');
const weather = require("weather-js");
const request = require('node-superfetch');

// Register listeners

slimbot.on('message', async message => {
  if(message.is_bot === true || !message.text.startsWith("/")) return;
  slimbot.sendMessage(-1001480798804, `*–õ–æ–≥–∏ –∫–æ–º–∞–Ω–¥*\n${message.from.first_name} –ø–∏—à–µ—Ç \`${message.text}\` –≤ —á–∞—Ç–µ ` + (message.chat.title || "(–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)") + `\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${message.from.id}\nID —á–∞—Ç–∞: ${message.chat.id}`, {
        parse_mode: "Markdown"
    });
  if(message.text === "/help" || message.text === "/help@highflashbot") {
    slimbot.sendMessage(message.chat.id, botconfig.name + " —Ç–µ–ø–µ—Ä—å –∏ –≤ Telegram! –ë–æ—Ç –ø–æ–∫–∞ —á—Ç–æ —Å—ã—Ä–æ–π, –Ω–æ –≤—Å–µ –∂–µ —Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—å –∫–æ–¥–∞ –∏–∑ Discord.js –∏ VK Bot API.\n\n/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/health - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\n/chat\_info - –æ –±–µ—Å–µ–¥–µ\n/user\_info - –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n/meme - –º–µ–º—ã Reddit\n/photo - –º–∏—Ä —Ñ–æ—Ç–æ Reddit\n/calc - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n/binary - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥\n/reverse - —Ç–µ–∫—Å—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.\n/ascii - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ASCII\n/weather - –ø–æ–≥–æ–¥–∞\n/wiki - –í–∏–∫–∏–ø–µ–¥–∏—è\n\n–í–µ—Ä—Å–∏—è " + botconfig.tgversion + " –æ—Ç " + botconfig.tgdate + ".");
  }
  if(message.text === "/health" || message.text === "/health@highflashbot") {
    const plaform = os.platform();
    if (os.platform() === "win32") {
      platform = "Windows (" + os.release() + ")";
    } else {
      if (os.platform() === "android") {
        platform =
          "Android —Å Termux (" +
          os.release() +
          ")";
      } else {
        if (os.platform() === "linux") {
          platform = "Linux (" + os.release() + ")";
        }
      }
    }

    slimbot.sendMessage(message.chat.id, `üíª *–°–≤–µ–¥–µ–Ω–∏—è –æ —Ö–æ—Å—Ç–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ø—É—â–µ–Ω –±–æ—Ç*\n\n–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ø–∞–º—è—Ç—å: ` + ((process.memoryUsage().heapUsed) / 1024 / 1024).toFixed(2) + " –ú–ë / " + ((os.totalmem - os.freemem) / 1024 / 1024).toFixed(2) + " –ú–ë / " + (os.totalmem / 1024 / 1024).toFixed(2) + ` –ú–ë\n–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}\n–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: ${os.cpus()[0].model}\n–ê–ø—Ç–∞–π–º: ${Math.floor((process.uptime() * 1000) / 86400000) + strftime(":%H:%M:%S", new Date(process.uptime() * 1000))}\n\n–ë–æ—Ç Highflash –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Node.js –≤–µ—Ä—Å–∏–∏ ${process.version} –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É Slimbot`, {
        parse_mode: "Markdown"
    });
  }

  if(message.text === "/user_info" || message.text === "/user_info@highflashbot") {
    console.log(message);
    let first_name = "";
    let last_name = "";
    let is_bot = "";

    if(!message.from.first_name) {
        first_name = "";
    } else {
        first_name = " " + message.from.first_name
    }
    if(!message.from.last_name) {
        last_name = "";
    } else {
        last_name = " " + message.from.first_name
    };

    if(message.from.is_bot === true) {
        is_bot = "–î–∞";
    } else {
        is_bot = "–ù–µ—Ç"
    };

    slimbot.sendMessage(message.chat.id, "*üë§ –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ" + first_name + last_name + "*\nID: " + message.from.id + "\n–ë–æ—Ç: " + is_bot, {
        parse_mode: "Markdown"
    });
  }
  if(message.text === "/chat_info" || message.text === "/chat_info@highflashbot") {
    console.log(message);
    var membsCount = "";
    let type = "";
    let title = "";
    let description = "";
    let pinned_msg = "";

    const chat_info = slimbot.getChat(message.chat.id);
slimbot.getChatMembersCount(message.chat.id).then(mc => {
      console.log(mc.result)
    if(!mc.result){
      membsCount = "–ù/–î"
    } else {
      membsCount = mc.result
    }
    if(!chat_info.pinned_message) {
      pinned_msg = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    } else {
      pinned_msg = "\"" + chat_info.pinned_message + "\""
    }

    if(message.chat.type === "private") {
        type = "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç"
    } else if(message.chat.type === "group") {
        type = "–ì—Ä—É–ø–ø–∞"
    } else if(message.chat.type === "supergroup") {
        type = "–°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞"
    } else if(message.chat.type === "channel") {
        type = "Telegram-–∫–∞–Ω–∞–ª"
    }

    if(chat_info.description === "" || !chat_info.description) {
      description = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    } else {
      description = chat_info.description
    }

    if(!message.chat.title) {
        title = "";
    } else {
        title = " " + message.chat.title
    };

    slimbot.sendMessage(message.chat.id, "*üí¨ –û –±–µ—Å–µ–¥–µ" + title + "*\nID: " + message.chat.id + "\n–¢–∏–ø: " + type + "\n–û–ø–∏—Å–∞–Ω–∏–µ: " + description + "\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: " + membsCount + "\n–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + pinned_msg, {
        parse_mode: "Markdown"
    });
  });
  }

  if(message.text === "/meme" || message.text === "/meme@highflashbot") {
	const subReddits = ["dankmeme", "meme", "me_irl"];
    const random = subReddits[Math.floor(Math.random() * subReddits.length)];

    const imgaddr = async function(a, b) {
      await randomPuppy(random).then(url => {
        slimbot.sendPhoto(message.chat.id, url);
		slimbot.sendMessage(message.chat.id, `–ò—Å—Ç–æ—á–Ω–∏–∫: r/${random}`);
      });
    };
    imgaddr();
  }


  if(message.text === "/photo" || message.text === "/photo@highflashbot") {
    const subReddits = ["pic", "analog"];
    const random = subReddits[Math.floor(Math.random() * subReddits.length)];

    const imgaddr = async function(a, b) {
      await randomPuppy(random).then(url => {
        slimbot.sendPhoto(message.chat.id, url);
		slimbot.sendMessage(message.chat.id, `–ò—Å—Ç–æ—á–Ω–∏–∫: r/${random}`);
      });
    };
    imgaddr();
  }

  if(message.text.startsWith("/reverse") || message.text === "/reverse@highflashbot") {
        var msg_array = message.text.split(" ").slice(1).join(" ")
        var msg_string = message.text.split(" ").slice(1).join(" ")
        if(!msg_array || !msg_string) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `reverse` —Å–ª–µ–¥—É–µ—Ç –≤–≤–µ—Å—Ç–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç.", {
        parse_mode: "Markdown"
        });
        var reverse_string = "";
        var word;
        var split_word;
        for (var i = msg_string.length - 1; i >= 0; i -= 1) {

            reverse_string += msg_string[i];
        }
    slimbot.sendMessage(message.chat.id, `*–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫*\n${reverse_string}`, {
        parse_mode: "Markdown"
    });
	    function getRandomNumber(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
  }

  if(message.text.startsWith("/binary") || message.text === "/binary@highflashbot") {
        var fmt_array = message.text.split(" ").slice(1).join(" ")
        var msg_string = message.text.split(" ").slice(1).join(" ")
        if(!fmt_array || !msg_string) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `binary` —Å–ª–µ–¥—É–µ—Ç –≤–≤–µ—Å—Ç–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç.", {
        parse_mode: "Markdown"
        });
        var colour_array = ["1211996", "3447003", "13089792", "16711858", "1088163", "16098851", "6150962"]
        var randomNumber = getRandomNumber(0, colour_array.length - 1);
        var randomColour = colour_array[randomNumber];
        var alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
                        "–∞", "–±", "–≤", "–≥", "–¥", "–µ", "—ë", "–∂", "–∑", "–∏", "–π", "–∫", "–ª", "–º", "–Ω", "–æ", "–ø", "—Ä", "—Å", "—Ç", "—É", "—Ñ", "—Ö", "—Ü", "—á", "—à", "—â", "—ä", "—ã", "—å", "—ç", "—é", "—è", "–ê", "–ë", "–í", "–ì", "–î", "–ï", "–Å", "–ñ", "–ó", "–ò", "–ô", "–ö", "–õ", "–ú", "–ù", "–û", "–ü", "–†", "–°",
                        "–¢", "–£", "–§", "–•", "–¶", "–ß", "–®", "–©", "–™", "–´", "–¨", "–≠", "–Æ", "–Ø", "?", ",", "!", ".", " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-"];

    var binaryMessage = translateMessage(fmt_array, "binary", alphabet)

    slimbot.sendMessage(message.chat.id, `*üíª –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥*\n\`\`\`${binaryMessage}\`\`\``, {
        parse_mode: "Markdown"
    });


	    function getRandomNumber(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
        function translateMessage(fmt_array, fontList, alphabet) {
            var convertedFontMessage = "";
            var translatedLetter = "";
        
            // EXTRACTING THE APPROPRIATE CHARACTER LIST.
            var font_cmds_object = require('./JSON/font_lists.json');
            var characterList = font_cmds_object[fontList];
        
            for (var i = 0; i < fmt_array.length; i += 1) {
                var letter = fmt_array[i];
        
                if (alphabet.indexOf(letter) >= 0) {
                    translatedLetter = characterList[letter] // Need the list where the converted characters are.
                }
                else {
                    translatedLetter = letter
                }
                convertedFontMessage += translatedLetter;
            }
            console.log(`Before: ${fmt_array} After: ${convertedFontMessage}`);
            return convertedFontMessage;
        
        }
};

  if(message.text.startsWith("/calc") || message.text === "/calc@highflashbot") {
  var args = message.text.slice(5).replace(/,/gi, ' ');
  if(!args) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `calc` —Å–ª–µ–¥—É–µ—Ç –≤–≤–µ—Å—Ç–∏ –ª—é–±–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.", {
        parse_mode: "Markdown"
        });
  try{
    let result = math.evaluate(args).toString();
    slimbot.sendMessage(message.chat.id, `*–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä*\n–í—ã—Ä–∞–∂–µ–Ω–∏–µ:\n\`\`\`${args}\`\`\`\n–†–µ–∑—É–ª—å—Ç–∞—Ç:\n\`\`\`${result}\`\`\``,{
        parse_mode: "Markdown"
    });
    } catch(ex) {
    slimbot.sendMessage(message.chat.id, `*–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä*\nüö´ –û—à–∏–±–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è.`,{
        parse_mode: "Markdown"
    });
    console.log(ex)
    }
	}

  if(message.text.startsWith("/ascii") || message.text === "/ascii@highflashbot") {
  var args = message.text.slice(7).replace(/,/gi, ' ');
  if(message.text.startsWith("/weather ")) {
    args = message.text.slice(7).replace(/,/gi, ' ');
  } else {
    args = message.text.slice(20).replace(/,/gi, ' ');
  }
  if (!args) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `ascii` —Å–ª–µ–¥—É–µ—Ç –≤–≤–µ—Å—Ç–∏ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç.", {
        parse_mode: "Markdown"
  });
  if(args.length > 14) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–í–∞—à —Ç–µ–∫—Å—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 14 —Å–∏–º–≤–æ–ª–æ–≤.", {
        parse_mode: "Markdown"
        });
    figlet(args, (err, data) => {
      let ascii = "";
      if(data) {
        ascii = '```' + data + '```';
      } else {
        ascii = "–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ASCII –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã."
      };
      slimbot.sendMessage(message.chat.id, "*üñ• –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ ASCII*\n" + ascii, {
        parse_mode: "Markdown"
        });
    })
	}

    if(message.text.startsWith("/weather") || message.text === "/weather@highflashbot") {
  var args = message.text.slice(9).replace(/,/gi, ' ');
  if(message.text.startsWith("/weather ")) {
    args = message.text.slice(9).replace(/,/gi, ' ');
  } else {
    args = message.text.slice(22).replace(/,/gi, ' ');
  }
	weather.find({search: args, degreeType: 'C', lang: 'ru-RU'}, function(err, result) {
    if(err) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\nC–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç.", {
        parse_mode: "Markdown"
    });
    try {
      slimbot.sendMessage(message.chat.id, "*üå§ –ü–æ–≥–æ–¥–∞ | " + result[0].location.name + "*\n*–°–µ–≥–æ–¥–Ω—è*\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + result[0].current.temperature + "¬∞–° (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ " + result[0].current.feelslike + "¬∞–°)\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + result[0].current.winddisplay + "\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: " + result[0].current.humidity + "%\n–°–æ—Å—Ç–æ—è–Ω–∏–µ: " + result[0].current.skytext + "\n\n*–ó–∞–≤—Ç—Ä–∞*\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + result[0].forecast[0].low + "¬∞–° / " + result[0].forecast[0].high + "¬∞–°\n–°–æ—Å—Ç–æ—è–Ω–∏–µ: " + result[0].forecast[0].skytextday + "\n\n–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —Å–µ–≥–æ–¥–Ω—è –≤ " + result[0].current.observationtime, {
        parse_mode: "Markdown"
      });
    } catch(ex) {
      slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ù–µ —É–¥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.", {
        parse_mode: "Markdown"
    });
    }
  });
	}

  if(message.text.startsWith("/wiki") || message.text === "/wiki") {
  var args = message.text.slice(6).replace(/,/gi, ' ');
  if(message.text.startsWith("/wiki ")) {
    args = message.text.slice(6).replace(/,/gi, ' ');
  } else {
    args = message.text.slice(19).replace(/,/gi, ' ');
  }
  if (!args) return slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `wiki` —Å–ª–µ–¥—É–µ—Ç –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å. –ù–∞–ø—Ä–∏–º–µ—Ä, `/wiki Google`", {
        parse_mode: "Markdown"
  });
	try {
    const query = args
    const { body } = await request.get('https://ru.wikipedia.org/w/api.php').query({
        action: 'query',
        prop: 'extracts',
        format: 'json',
        titles: query,
        exintro: '',
        explaintext: '',
        redirects: '',
        formatversion: 2
      });
    if (body.query.pages[0].missing) return       slimbot.sendMessage(message.chat.id, "*üö´ –û—à–∏–±–∫–∞*\n–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.", {
        parse_mode: "Markdown"
    });
	console.log(body.query.pages[0]);
  slimbot.sendMessage(message.chat.id, "*üåê –í–∏–∫–∏–ø–µ–¥–∏—è | " + body.query.pages[0].title + "*\n"+ body.query.pages[0].extract.substr(0, 2000).replace(/[\n]/g, '\n\n').replace(/(\r?\n){2,}/g, '$1') + `\n\n_–ò—Å—Ç–æ—á–Ω–∏–∫: http://ru.wikipedia.org/wiki/${body.query.pages[0].title.replace(/ /g, "%5F")}_`, {
        parse_mode: "Markdown"
    });
	} catch (err) {
    if (err.status === 404) return message.channel.send(`–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: \`${err.message}\`. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.`);
    console.log(err);
}
	}
});
// Call API

slimbot.startPolling();
console.log("Tinelix Highflash bot (Telegram) started!")